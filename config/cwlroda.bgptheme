##############################################################################
# Custom theme for custom bash git prompt
# https://github.com/magicmonty/bash-git-prompt
#
# Example usage:
# if [ -f ~/.bash-git-prompt/gitprompt.sh ]; then
#   GIT_PROMPT_THEME=cwlroda
#   source ~/.bash-git-prompt/gitprompt.sh
# fi
#
# cwlroda [https://github.com/cwlroda]
##############################################################################

override_git_prompt_colors() {
  GIT_PROMPT_THEME_NAME="cwlroda"
  GIT_PROMPT_ONLY_IN_REPO=1
  GIT_PROMPT_WITH_VIRTUAL_ENV=0

  #Overrides the prompt_callback function used by bash-git-prompt
  function prompt_callback {
    GIT_CONTAINER_FOLDER_FULLPATH=$(git rev-parse --show-toplevel 2> /dev/null)
    GIT_CONTAINER_FOLDER=$(basename $GIT_CONTAINER_FOLDER_FULLPATH 2> /dev/null)
    CURRENT_FULLPATH=$(pwd)
    local PS1=$GIT_CONTAINER_FOLDER${CURRENT_FULLPATH#$GIT_CONTAINER_FOLDER_FULLPATH}
    gp_set_window_title "$PS1"
    echo -n "\[${DIR_COLOR}\]${PS1} \[${CYAN_BRIGHT}\]${ARROW}\[${RESET}\]"
  }

  Time12a="\$(date +%H:%M:%S)"
  GIT_PROMPT_BRANCH="\[${PURPLE_BOLD}\]"        # the git branch that is active in the current directory
  GIT_PROMPT_MASTER_BRANCH="\[${PURPLE_BOLD}\]" # used if the git branch that is active in the current directory is $GIT_PROMPT_MASTER_BRANCHES
  GIT_PROMPT_PREFIX="\[${WHITE_BOLD}\][ "                 # start of the git info string
  GIT_PROMPT_SUFFIX="\[${WHITE_BOLD}\] ]"                 # the end of the git info string
  GIT_PROMPT_SEPARATOR="\[${WHITE_BOLD}\] |"              # separates each item
  GIT_PROMPT_STAGED=" \[${GREEN}\]‚óè"           # the number of staged files/directories
  GIT_PROMPT_CONFLICTS=" \[${RED_BOLD}\]‚úñ"       # the number of files in conflict
  GIT_PROMPT_CHANGED=" \[${BLUE_BOLD}\]‚úö"        # the number of changed files

  # GIT_PROMPT_REMOTE=" "                 # the remote branch name (if any) and the symbols for ahead and behind
  GIT_PROMPT_UNTRACKED=" \[${CYAN}\]‚Ä¶"       # the number of untracked files/dirs
  GIT_PROMPT_STASHED=" \[${CYAN_BOLD}\]‚öë"    # the number of stashed files/dir
  GIT_PROMPT_CLEAN=" üòÄ"      # a colored flag indicating a "clean" repo

  local gp_end="_LAST_COMMAND_INDICATOR_\n\[${WHITE}\]${Time12a}\[${RESET}\]"

  GIT_PROMPT_START_USER="${debian_chroot:+($debian_chroot)}\[${ENV_COLOR}\]${VENV}\[${ENV_COLOR}\]${CONDAENV}\[${DATE_COLOR}\] \D{%d/%m/%y} \[${DATE_TIME_COLOR}\]$ARROW \[${TIME_COLOR}\]\D{%T} \[${TIME_USER_COLOR}\]$ARROW \[${USER_COLOR}\]\u: \[${USER_DIR_COLOR}\]$ARROW "
  GIT_PROMPT_END_USER="_LAST_COMMAND_INDICATOR_ \[${TOKEN_COLOR}\] \\$ \[${END_COLOR}\]$ARROW \[${RESET}\]"
  # GIT_PROMPT_END_ROOT="${gp_end} /!!!\ "

  GIT_PROMPT_COMMAND_OK=" \[${GREEN_BOLD}\]üòÄ"    # indicator if the last command returned with an exit code of 0
  GIT_PROMPT_COMMAND_FAIL=" \[${RED_BOLD}\]üò±-_LAST_COMMAND_STATE_"    # indicator if the last command returned with an exit code of other than 0
}

reload_git_prompt_colors "cwlroda"
